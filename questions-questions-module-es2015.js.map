{"version":3,"sources":["./src/app/questions/questions.page.html","./src/app/questions/questions-routing.module.ts","./src/app/questions/questions.module.ts","./src/app/questions/questions.page.scss","./src/app/questions/questions.page.ts"],"names":[],"mappings":"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","file":"questions-questions-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button (click)=\\\"goBack()\\\">\\n                <ion-icon name=\\\"arrow-back-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title>\\n            {{thema.titel}}\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n\\n<!-- Overlay for timeout purpose-->\\n<div visible=\\\"true\\\" style=\\\"position:fixed; visibility:hidden; height: 100vh; width: 100vw; background-color: grey; z-index: 1000; opacity: 0.9;\\\" id=\\\"overlay\\\">\\n    <div style=\\\"height: 100%; width: 100%; display: flex; align-items: center; justify-content: center; flex-direction: column;\\\">\\n        <ion-spinner name=\\\"lines\\\" style=\\\"height: 100%;\\n        max-width: 150px;\\n        max-height: 150px;\\n        width: 100%;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        flex-direction: column;\\\"></ion-spinner>\\n        <p stlye=\\\"font-size:30px\\\">\\n            Timeout!\\n        </p>\\n    </div>\\n</div>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n    <div id=\\\"container\\\" style=\\\"transform: unset; top: unset; height: 100%\\\">\\n        <ion-slides (ionSlideDidChange)=\\\"checkLock()\\\" pager=\\\"true\\\" [options]=\\\"slideOpts\\\" style=\\\"height: 100%;\\\">\\n            <ng-container *ngFor=\\\"let question of thema.questions, let i = index\\\">\\n                <ion-slide style=\\\"display: block;height: 100%;\\\">\\n                    <ng-container *ngIf=\\\"question.img != undefined\\\">\\n                        <img [src]=\\\"question.img\\\" />\\n                    </ng-container>\\n                    <p>\\n                        {{question.question}}\\n                    </p>\\n                    <ng-container *ngIf=\\\"question.type === 'normal'\\\">\\n                        <ion-input [(ngModel)]=\\\"solutions.solutions.get(topic).solution[i]\\\" placeholder=\\\"Enter answer\\\"></ion-input>\\n                        <ion-button expand=\\\"block\\\" [disabled]=\\\"solutions.solutions.get(topic).correct[i]\\\" (click)=\\\"checkAnswer(i)\\\">Submit</ion-button>\\n\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"question.type === 'multiple_choice'\\\">\\n                        <ng-container *ngFor=\\\"let possibility of question.possiblities, let k = index\\\">\\n                            <ion-button expand=\\\"full\\\" shape=\\\"round\\\" [color]=\\\"(solutions.solutions.get(topic).answerStatus[i][k] === 0) ? 'primary' : ((solutions.solutions.get(topic).answerStatus[i][k] === 1) ? 'danger' : 'success')\\\" (click)=\\\"checkMultAnswer(possibility, i, k)\\\" [disabled]=\\\"solutions.solutions.get(topic).answerStatus[i][k] !== 0\\\">{{possibility}}</ion-button>\\n                        </ng-container>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"question.type === 'number'\\\">\\n                        <ion-input [(ngModel)]=\\\"solutions.solutions.get(topic).solution[i]\\\" type=\\\"number\\\" placeholder=\\\"Enter answer\\\"></ion-input>\\n                        <ion-button expand=\\\"block\\\" [disabled]=\\\"solutions.solutions.get(topic).correct[i]\\\" (click)=\\\"checkNumberAnswer(i)\\\">Submit</ion-button>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"solutions.solutions.get(topic).correct[i]\\\">\\n                        <ion-icon name=\\\"checkmark-circle-outline\\\" style=\\\"color: limegreen; max-width: 100px; max-height: 100px; height: 50vw; width: 50vw;\\\"></ion-icon>\\n                    </ng-container>\\n                </ion-slide>\\n            </ng-container>\\n        </ion-slides>\\n    </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuestionsPage } from './questions.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuestionsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuestionsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuestionsPageRoutingModule } from './questions-routing.module';\n\nimport { QuestionsPage } from './questions.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuestionsPageRoutingModule\n  ],\n  declarations: [QuestionsPage]\n})\nexport class QuestionsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9ucy9xdWVzdGlvbnMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Themen } from '../themen';\nimport { Solutions } from '../topic';\nimport { DataService } from '../data.service';\nimport { IonSlides, IonButton } from '@ionic/angular';\nimport { ToastController } from '@ionic/angular';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.page.html',\n  styleUrls: ['./questions.page.scss'],\n})\nexport class QuestionsPage implements OnInit {\n\n\n  @ViewChild(IonSlides) slider: IonSlides;\n\n  //Nachrichten wenn die Aufgabe korrekt ist\n  positiveMessages = [\n    \"Super\",\n    \"Klasse\",\n    \"Wow!\"\n  ];\n\n\n  //Nachrichten bei falscher Eingabe\n  negativeMessages = [\n    \"Mensche Kerle\",\n    \"Das geht doch besser\",\n    \"Streng dich mal an!\"\n  ];\n\n  //Nachrichten falls noch nicht alle korrekten Antworten bei Multiple Choice gewählt wurden\n  continueMessage = [\n    \"Das war es noch nicht ganz\",\n    \"Fast alles\",\n    \"Weitermachen!\",\n    \"Noch nicht ganz\"\n  ];\n\n\n  topic: String;\n  solutions: Solutions\n  thema;\n  slideOpts = {\n    initialSlide: 0,\n    speed: 400,\n    allowSlideNext: false\n  }; \n  numberOfConsecutiveErrors: number = 0;\n\n  //timeout nach 2 fehlern am Stück\n  numberOfMaximumErrors:  number = 3;\n\n  //timeout 5 sekunden\n  timeoutDuration: number = 5000;\n\n\n  getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n  \n\n  constructor(private route: ActivatedRoute, private dataservice: DataService, public toastController: ToastController, private router: Router) {\n    \n  }\n\n  \n\n  ngOnInit() {\n    this.solutions = this.dataservice.getSubmissions();\n\n    this.route.queryParams.subscribe(params => {\n      this.topic = params['topic'];\n      console.log(this.topic);\n      Themen.themen.forEach(element => {\n        if(element.titel === this.topic) {\n          this.thema = element;\n          this.slideOpts.initialSlide = this.solutions.solutions.get(this.topic).totalCorrect;\n        }\n      });\n\n    });\n\n  }\n\n  async checkLock() {\n    console.log(\"swipe changed\")\n    let currentIndex = await this.slider.getActiveIndex();\n    if(currentIndex === this.solutions.solutions.get(this.topic).totalCorrect) {\n      this.slider.lockSwipeToNext(true);\n    } else {\n      this.slider.lockSwipeToNext(false);\n    }\n  }\n\n\n  checkAnswer(index: number) {\n    if(this.thema.questions[index].answer.indexOf(this.solutions.solutions.get(this.topic).solution[index].toLowerCase()) > -1) {\n      this.rightAnswer(index);\n    } else {\n      this.wrongAnswer();\n    }\n  }\n\n  checkNumberAnswer(index: number) {\n    let userSolution = Number(this.solutions.solutions.get(this.topic).solution[index]);\n    let correctSolution = this.thema.questions[index].answer;\n    let tolerance = this.thema.questions[index].tolerance;\n    if(userSolution >= correctSolution - correctSolution  * tolerance && userSolution <= correctSolution + correctSolution  * tolerance) {\n      this.rightAnswer(index);\n    } else {\n      this.wrongAnswer();\n    }\n  }\n\n  checkMultAnswer(possibility: string, index: number, answerIndex: number) {\n    let i = this.thema.questions[index].answer.indexOf(possibility)\n\n    let element\n    if(i > -1) {\n      this.solutions.solutions.get(this.topic).answerStatus[index][answerIndex] = 2;\n      this.thema.questions[index].answer.splice(i, 1);\n      if(this.thema.questions[index].answer.length === 0) {\n        this.rightAnswer(index);\n      } else {\n        this.presentToast(\"continue\");\n      }\n    } else {\n      this.solutions.solutions.get(this.topic).answerStatus[index][answerIndex] = 1;\n      this.wrongAnswer();\n    } \n  }\n\n  rightAnswer(index: number)\n  {\n    this.presentToast(\"positive\");\n    this.slider.lockSwipeToNext(false);\n    this.solutions.solutions.get(this.topic).correct[index] = true;\n    this.solutions.solutions.get(this.topic).totalCorrect++;\n    this.numberOfConsecutiveErrors = 0;\n  }\n\n  wrongAnswer() {\n    this.presentToast(\"negative\");\n    this.numberOfConsecutiveErrors++;\n    if(this.numberOfConsecutiveErrors >= this.numberOfMaximumErrors) {\n      this.showOverlay();\n    }\n  }\n\n  showOverlay() {\n    document.getElementById(\"overlay\").style.visibility = \"visible\";\n    setTimeout(() => {\n      document.getElementById(\"overlay\").style.visibility = \"hidden\";\n    }, this.timeoutDuration)\n  }\n\n  goBack() {\n    this.router.navigateByUrl(\"/home\");\n  }\n\n  async presentToast(type: string) {\n\n    let message = \"\";\n    if(type === \"positive\") {\n      let index = this.getRandomInt(this.positiveMessages.length);\n      message = this.positiveMessages[index];\n\n    } else if (type == \"negative\") {\n      let index = this.getRandomInt(this.negativeMessages.length);\n      message = this.negativeMessages[index];\n    } else {\n      let index = this.getRandomInt(this.continueMessage.length);\n      message = this.continueMessage[index];\n    }\n    \n\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":"webpack:///"}